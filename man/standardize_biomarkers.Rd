% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize_biomarkers.R
\name{standardize_biomarkers}
\alias{standardize_biomarkers}
\title{Standardize Biomarker Measurements}
\usage{
standardize_biomarkers(bio_data)
}
\arguments{
\item{bio_data}{A data frame containing the biomarker measurements}

\item{meta_concept}{The name of the column containing biomarker identifiers (character)}

\item{unit_source_value}{The name of the column containing original units of measurement (character)}

\item{value_as_number}{The name of the column containing numerical values (numeric)}
}
\value{
A list containing two elements:
\itemize{
\item standardized_data: A data frame with original data plus additional columns:
\itemize{
\item standardized_value: The converted measurement in standard unit
\item original_unit: The original unit preserved for reference
\item standard_unit: The target standard unit
}
\item conversion_summary: A data frame summarizing conversions performed:
\itemize{
\item meta_concept: Biomarker name
\item original_unit: Original unit of measurement
\item standard_unit: Standard unit used
\item n_values: Number of values converted
\item n_na_units: Number of missing units
\item n_no_standard: Number of values with no standard unit
\item n_unknown_marker: Number of unknown markers
\item mean_original: Mean of original values
\item mean_standardized: Mean of standardized values
}
}
}
\description{
Standardizes biomarker measurements across different units of measurement commonly used in clinical
and laboratory settings. Converts biomarker values to standardized units based on literature standards.
}
\details{
Column requirements:
\itemize{
\item The column specified by meta_concept must contain biomarker identifiers as characters
\item The column specified by unit_source_value must contain units of measurement as characters
\item The column specified by value_as_number must contain numeric measurement values
}
}
\note{
\itemize{
\item All biomarker names and units are case-insensitive
\item Special characters in units are removed during processing
\item The function maintains a detailed conversion history in the summary output
\item Default units are assigned based on common laboratory standards when units are missing
}
}
\section{Supported Biomarkers and Standard Units}{

\itemize{
\item Enzymes (U/L): ALAT, ASAT, CK, LDH
\item Proteins (g/L): ALB, FIB, PROT
\item Blood Cells (10^9/L): BASO, EOSINO, LEUC, LYM, MONO, PNN, PLAQ
\item Metabolites (μmol/L): BILI, CREAT
\item Cytokines (pg/mL): BNP, IL6, IL10, IL1B, TNFA
\item Electrolytes (mmol/L): BICAR, CA, GLUC, K, LACT_V, NA, PHOSPH, TCA, UREE
\item Other:
\itemize{
\item TROPO (ng/L)
\item CST (nmol/L)
\item CRP (mg/L)
\item DDI, FERRI (μg/L)
\item HB (g/dL)
\item HBA1C, PROC (\%)
\item NT-PROBNP (pg/mL)
\item PROTU (g/L)
\item PROTUCREATU (mg/mmol)
\item TP (mmol/L)
\item TSH (mIU/L)
}
}
}

\section{Unit Conversions}{

\itemize{
\item Basic equivalencies: U/L ↔ IU/L, g/L ↔ g/L, mmol/L ↔ mmol/L
\item Complex conversions:
\itemize{
\item g/dL → g/L (×10)
\item mg/dL → g/L (×0.1)
\item mg/dL → mmol/L (×0.0555)
\item mg/dL → μmol/L (×17.1)
\item cells/μL → 10^9/L (×0.001)
\item cells/mm³ → 10^9/L (×0.001)
\item ng/mL → ng/L (×1000)
\item μg/L → ng/L (×1)
\item pmol/L → ng/L (×0.118)
\item ng/mL → pg/mL (×1000)
\item mEq/L → mmol/L (×1)
\item g/24h → g/L (×1)
\item mg/g → mg/mmol (×0.113)
\item μIU/mL → mIU/L (×1)
}
}
}

\section{Warning}{

This function performs row-by-row processing using rowwise() which makes it very computationally
intensive. For large datasets (>10,000 rows), the processing time can be significant. Consider
breaking up large datasets into smaller chunks if possible.
}

\examples{
bio_data_pos <- data.frame(
  meta_concept = c("ALAT", "CREAT"),
  unit_source_value = c("IU/L", "mg/dL"),
  value_as_number = c(45, 1.2)
)

result <- standardize_biomarkers(bio_data_pos)
standardized_data <- result$standardized_data
conversion_summary <- result$conversion_summary

# Check for conversion issues
print(result$conversion_summary \%>\% filter(n_na_units > 0))
print(result$conversion_summary \%>\% filter(n_no_standard > 0))
print(result$conversion_summary \%>\% filter(n_unknown_marker > 0))

}
